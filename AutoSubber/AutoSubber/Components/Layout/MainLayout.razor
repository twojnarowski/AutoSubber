@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Identity
@using AutoSubber.Data
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container">
        <a class="navbar-brand" href="/">AutoSubber</a>
        
        <div class="navbar-nav ms-auto">
            <AuthorizeView>
                <Authorized>
                    <a class="nav-link" href="/history">History</a>
                    <a class="nav-link" href="/settings">Settings</a>
                    @if (isAdmin)
                    {
                        <a class="nav-link" href="/diagnostics">Diagnostics</a>
                    }
                    <a class="nav-link" href="/Account/Manage">Account</a>
                    <form method="post" action="/Account/Logout" class="d-inline">
                        <button type="submit" class="btn btn-link nav-link border-0">Logout</button>
                    </form>
                </Authorized>
                <NotAuthorized>
                    <a class="nav-link" href="/Account/Login">Login</a>
                    <a class="nav-link" href="/Account/Register">Register</a>
                </NotAuthorized>
            </AuthorizeView>
        </div>
    </div>
</nav>

<main class="container mt-4">
    @Body
</main>

<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>

@code {
    private bool isAdmin = false;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        if (authState.User.Identity?.IsAuthenticated == true)
        {
            var user = await UserManager.GetUserAsync(authState.User);
            isAdmin = user?.IsAdmin == true;
        }
    }
}
